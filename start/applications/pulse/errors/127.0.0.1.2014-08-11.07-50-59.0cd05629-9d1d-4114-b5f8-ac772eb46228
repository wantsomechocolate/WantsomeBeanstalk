(dp1
S'output'
p2
S"<class 'requests.exceptions.ConnectionError'> HTTPConnectionPool(host='text-processing.com', port=80): Max retries exceeded with url: /api/sentiment/ (Caused by <class 'socket.gaierror'>: [Errno -2] Name or service not known)"
p3
sS'layer'
p4
S'/home/wantsomechocolate/Code/web2py/start/applications/pulse/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\nimport requests\nimport json\n\ndef index():\n    return dict()\n\ndef process(my_list):\n    #analyze first item\n    binary_first=my_list[1]\n    output_first=json.loads(binary_first)\n    label_first=output_first[\'label\']\n    \n    #analyze second item\n    binary_second = my_list[3]\n    output_second = json.loads(binary_second)\n    label_second = output_second[\'label\']\n    \n    #logic\n    if label_first ==\'pos\':\n        if label_second!=\'pos\':\n            return my_list[0]\n        else:\n            if output_first[\'probability\'][\'pos\'] > output_second[\'probability\'][\'pos\']:\n                return my_list[0]\n            else:\n                return my_list[2]\n    elif label_first ==\'neg\':\n        if label_second !=\'neg\':\n             return my_list[2]\n        else:\n            if output_first[\'probability\'][\'neg\']<output_second[\'probability\'][\'neg\']:\n                return my_list[0]\n            else:\n                return my_list[2]\n    elif label_first == \'neutral\':\n        if label_second == \'pos\':\n            return my_list[2]\n        elif label_second==\'neg\':\n            return my_list[0]\n        else:\n            if output_first[\'probability\'][\'pos\'] > output_second[\'probability\'][\'pos\']:\n                return my_list[0]\n            else:\n                return my_list[2]\n    elif label_first == \'neutral\':\n        if label_second == \'pos\':\n            return my_list[2]\n        elif label_second==\'neg\':\n            return my_list[0]\n        else:\n            if output_first[\'probability\'][\'pos\'] > output_second[\'probability\'][\'pos\']:\n                return my_list[0]\n            else:\n                return my_list[2]\ndef pulse():\n    session.m=[]\n    url = \'http://text-processing.com/api/sentiment/\'\n    #first item\n    text_first = request.vars.first_item\n    text_first = text_first.split(\'_\')\n    text_first = \' \'.join(text_first)\n    session.m.append(text_first)\n    data_first = {\'text\':text_first}\n    r_first = requests.post(url,data=data_first)\n    session.m.append(r_first.content)\n    \n    #second item\n    text_second = request.vars.second_item\n    text_second = text_second.split(\'_\')\n    text_second = \' \'.join(text_second)\n    session.m.append(text_second)\n    data_second = {\'text\':text_second}\n    r_second = requests.post(url, data=data_second)\n    session.m.append(r_second.content)\n    \n    winner = process(session.m)\n    return "The winner is {}!".format(winner)\n    \n\n       \n        \n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\nresponse._vars=response._caller(pulse)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/wantsomechocolate/Code/web2py/start/gluon/restricted.py", line 220, in restricted\n    exec ccode in environment\n  File "/home/wantsomechocolate/Code/web2py/start/applications/pulse/controllers/default.py", line 138, in <module>\n  File "/home/wantsomechocolate/Code/web2py/start/gluon/globals.py", line 385, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/wantsomechocolate/Code/web2py/start/applications/pulse/controllers/default.py", line 66, in pulse\n    r_first = requests.post(url,data=data_first)\n  File "/home/wantsomechocolate/Code/web2py/start/env/local/lib/python2.7/site-packages/requests/api.py", line 88, in post\n    return request(\'post\', url, data=data, **kwargs)\n  File "/home/wantsomechocolate/Code/web2py/start/env/local/lib/python2.7/site-packages/requests/api.py", line 44, in request\n    return session.request(method=method, url=url, **kwargs)\n  File "/home/wantsomechocolate/Code/web2py/start/env/local/lib/python2.7/site-packages/requests/sessions.py", line 456, in request\n    resp = self.send(prep, **send_kwargs)\n  File "/home/wantsomechocolate/Code/web2py/start/env/local/lib/python2.7/site-packages/requests/sessions.py", line 559, in send\n    r = adapter.send(request, **kwargs)\n  File "/home/wantsomechocolate/Code/web2py/start/env/local/lib/python2.7/site-packages/requests/adapters.py", line 375, in send\n    raise ConnectionError(e, request=request)\nConnectionError: HTTPConnectionPool(host=\'text-processing.com\', port=80): Max retries exceeded with url: /api/sentiment/ (Caused by <class \'socket.gaierror\'>: [Errno -2] Name or service not known)\n'
p11
s.