(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'Table' object has no attribute 'view'"
p3
sS'layer'
p4
S'/Users/massimodipierro/Dropbox/web2py/applications/myforum/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\n\ndef index():\n    if_author = lambda row:row.created_by==auth.user_id,\n    db.forum.name.represent = lambda name,row: A(name,_href=URL(\'forum\',args=(row.id,IS_SLUG.urlify(name))))\n    grid = SQLFORM.grid(db.forum,orderby=~db.forum.views,editable=if_author,deletable=if_author,\n                        create=False,csv=False)\n    return locals()\n\n@auth.requires_login()\ndef create_forum():\n    db.forum.views.readable = db.forum.view.last_updated = False\n    form = SQLFORM(db.forum).process(next=\'forum/[id]\')\n    return locals()\n\ndef forum():\n    if request.post_vars.parent_id==\'0\': request.post_vars.parent_id=None\n    forum = db.forum(request.args(0,cast=int)) or redirect(URL(\'index\'))\n    db.post.forum.default=forum.id    \n    form = SQLFORM(db.post).process() if auth.user else None\n    forum.update(views=forum.views+1,\n                 last_updated = request.now if form.accepted else forum.last_update)\n    posts = db(db.post.forum==forum.id).select(orderby=db.post.created_on).as_trees()\n    return locals()\n\n@auth.requires_login()\ndef do():\n    id, method = request.args(0,cast=int), request.args(1)\n    if method == \'report\':\n        db(db.post.id==id)(db.post.approved_by==None)(db.post.reported_by==None).update(\n            reported_by=auth.user.id)\n        return \'reported\'\n    if method == \'approve\' and (DEBUG or auth.has_membership(\'moderators\')):\n        db(db.post.id==id).update(reported_by=None, approved_by=auth.user.id, banned_by=None)\n        return \'approved\'\n    if method == \'banned\' and (DEBUG or auth.has_membership(\'moderators\')):\n        db(db.post.id==id).update(banned_by=auth.user.id, approved_by=None)\n        return \'banned\'\n    return \'\'\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\nresponse._vars=response._caller(create_forum)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/Users/massimodipierro/Dropbox/web2py/gluon/restricted.py", line 217, in restricted\n    exec ccode in environment\n  File "/Users/massimodipierro/Dropbox/web2py/applications/myforum/controllers/default.py", line 105, in <module>\n  File "/Users/massimodipierro/Dropbox/web2py/gluon/globals.py", line 372, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/massimodipierro/Dropbox/web2py/gluon/tools.py", line 3239, in f\n    return action(*a, **b)\n  File "/Users/massimodipierro/Dropbox/web2py/applications/myforum/controllers/default.py", line 22, in create_forum\n    db.forum.views.readable = db.forum.view.last_updated = False\n  File "/Users/massimodipierro/Dropbox/web2py/gluon/dal.py", line 8912, in __getitem__\n    return ogetattr(self, str(key))\nAttributeError: \'Table\' object has no attribute \'view\'\n'
p11
s.